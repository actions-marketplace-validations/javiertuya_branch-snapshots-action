# action.yml
name: 'Branch Snapshots Action'
description: 'This action publishes branch snapshots to the GitHub Packages Maven registry'
inputs:
  token:
    description: 'Token to access GitHub Packages'
    required: true
  java-version:
    description: 'Java version used to build the package'
    required: true
  mvn-deploy-args:
    description: 'Optional arguments to be passed to the `mvn deploy` command'
    required: false
  package-name:
    description: 'Name of the package to publish'
    required: true
  delete-old-versions:
    description: 'If true, keeps only `min-versions-to-keep` versions. Default: false'
    required: false
    default: false
  min-versions-to-keep:
    description: 'The number of latest versions to keep if `delete-old-versions` is true. Default: 2'
    required: false
    default: 2
runs:
  using: "composite"
  steps:
      - name: Check that event is not PR
        if: github.event_name == 'pull_request'
        shell: bash
        run: |
          echo "ERROR: Branch snapshots can not be created by pull request events"
          exit 1
        
      - name: Checkout GitHub repo
        uses: actions/checkout@v3

      - name: Select Java Version
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: ${{ inputs.java-version }}
          cache: 'maven'

      - name: Rename version to <version number>-<branch name>-SNAPSHOT
        shell: bash
        run: |
          oldversion=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "Renaming initial version: ${oldversion}"
          version=${oldversion//-SNAPSHOT/}
          version=${version}-${{ github.ref_name }}-SNAPSHOT
          echo "to new Version: $version"
          mvn versions:set -DnewVersion=$version --no-transfer-progress

      # manage package versions shows the date in which branch was created, not executed
      # if no changing version number, this will keep latest `min-versions-to-keep` branches BY BRANCH CREATION
      # because of this, deletion must be done BEFORE deploy (if not, a version of old branch can be deleted after being updated)
      # NOTE at least one package must exist, if not the build fails:
      # First time that a package is published `delete-old-versions`, must be set to false
      - uses: actions/delete-package-versions@v4
        if: inputs.delete-old-versions == 'true'
        with: 
          package-name: ${{ inputs.package-name }}
          package-type: 'maven'
          min-versions-to-keep: ${{ inputs.min-versions-to-keep }}
          delete-only-pre-release-versions: "true"

      - name: Deploy to GitHub packages
        shell: bash
        run: mvn deploy ${{ inputs.mvn-deploy-args }}
        env:
          GITHUB_TOKEN: ${{ inputs.token }}
